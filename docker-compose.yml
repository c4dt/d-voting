services:

  dela-leader:             # inital DELA leader node
    image: dela
    build:
      dockerfile: ./Dockerfiles/Dockerfile.dela
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      PROXYPORT: ${PROXYPORT}
      LLVL: debug
    volumes:
      - dela-leader-data:/data
    hostname: dela-leader
  dela-worker-1:             # DELA worker node
    image: dela
    build:
      dockerfile: ./Dockerfiles/Dockerfile.dela
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      PROXYPORT: ${PROXYPORT}
      LLVL: debug
    volumes:
      - dela-worker-1-data:/data
    hostname: dela-worker-1
  dela-worker-2:             # DELA worker node
    image: dela
    build:
      dockerfile: ./Dockerfiles/Dockerfile.dela
    environment:
      PROXYKEY: ${PUBLIC_KEY}
      PROXYPORT: ${PROXYPORT}
      LLVL: debug
    volumes:
      - dela-worker-2-data:/data
    hostname: dela-worker-2

  frontend:         # web service frontend
    image: frontend
    build:
      dockerfile: ./Dockerfiles/Dockerfile.frontend
    ports:
      - 127.0.0.1:3000:3000
    environment:
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}

  backend:          # web service backend
    image: backend
    build:
      dockerfile: ./Dockerfiles/Dockerfile.backend
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      FRONT_END_URL: ${FRONT_END_URL}
      DELA_NODE_URL: ${DELA_NODE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      PUBLIC_KEY: ${PUBLIC_KEY}
      PRIVATE_KEY: ${PRIVATE_KEY}
    ports:
      - 127.0.0.1:5000:5000
    depends_on:
      db:
        condition: service_started

  db:               # PostgreSQL database
    image: postgres:15
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./web/backend/src/migration.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres-data:    # PostgreSQL database
  dela-leader-data:
  dela-worker-1-data:
  dela-worker-2-data:
